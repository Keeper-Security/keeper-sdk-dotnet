// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: clientlogger.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ClientLogger {

  /// <summary>Holder for reflection information generated from clientlogger.proto</summary>
  public static partial class ClientloggerReflection {

    #region Descriptor
    /// <summary>File descriptor for clientlogger.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientloggerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJjbGllbnRsb2dnZXIucHJvdG8SDENsaWVudExvZ2dlciJ2ChFDbGllbnRM",
            "b2dnZXJUb2tlbhIWCg5jbGllbnRMb2dnZXJJZBgBIAEoAxIQCghkZXZpY2VJ",
            "ZBgCIAEoAxIZChFkYXRlQ3JlYXRlZE1pbGxpcxgDIAEoAxIcChRleHBpcmF0",
            "aW9uRGF0ZU1pbGxpcxgEIAEoAyJRChNDbGllbnRMb2dnZXJSZXF1ZXN0EhwK",
            "FGVuY3J5cHRlZExvZ2dlclRva2VuGAEgASgJEg8KB21lc3NhZ2UYAiABKAkS",
            "CwoDdGFnGAMgAygJIpQBChRDbGllbnRMb2dnZXJSZXNwb25zZRIOCgZzdGF0",
            "dXMYASABKAkSFQoNcmVzcG9uc2VfY29kZRgCIAEoCRIXCg9hZGRpdGlvbmFs",
            "X2luZm8YAyABKAkSPAoSY2xpZW50TG9nZ2VyU3RhdHVzGAQgAygLMiAuQ2xp",
            "ZW50TG9nZ2VyLkNsaWVudExvZ2dlclN0YXR1cyJVChdDbGllbnRMb2dnZXJB",
            "dXRoUmVxdWVzdBIcChRlbmNyeXB0ZWREZXZpY2VUb2tlbhgBIAEoDBIPCgdt",
            "ZXNzYWdlGAIgASgJEgsKA3RhZxgDIAMoCSLJAQoYQ2xpZW50TG9nZ2VyQWRt",
            "aW5SZXF1ZXN0Ei8KAm9wGAEgASgOMiMuQ2xpZW50TG9nZ2VyLkNsaWVudExv",
            "Z2dlck9wZXJhdGlvbhIcChRlbmNyeXB0ZWRMb2dnZXJUb2tlbhgCIAEoCRIc",
            "ChRlbmNyeXB0ZWREZXZpY2VUb2tlbhgDIAEoDBIQCgh1c2VybmFtZRgEIAEo",
            "CRIQCghkdXJhdGlvbhgFIAEoBRIPCgdtZXNzYWdlGAYgASgJEgsKA3RhZxgH",
            "IAMoCSKZAQoZQ2xpZW50TG9nZ2VyQWRtaW5SZXNwb25zZRIOCgZzdGF0dXMY",
            "ASABKAkSFQoNcmVzcG9uc2VfY29kZRgCIAEoCRIXCg9hZGRpdGlvbmFsX2lu",
            "Zm8YAyABKAkSPAoSY2xpZW50TG9nZ2VyU3RhdHVzGAQgAygLMiAuQ2xpZW50",
            "TG9nZ2VyLkNsaWVudExvZ2dlclN0YXR1cyKbAQoSQ2xpZW50TG9nZ2VyU3Rh",
            "dHVzEhAKCGRldmljZUlkGAEgASgDEhAKCHVzZXJuYW1lGAIgASgJEhYKDmRh",
            "dGVTdGFydGVkVVRDGAMgASgJEhkKEWV4cGlyYXRpb25EYXRlVVRDGAQgASgJ",
            "EhAKCGlzQWN0aXZlGAUgASgIEhwKFGVuY3J5cHRlZExvZ2dlclRva2VuGAYg",
            "ASgMKkgKFUNsaWVudExvZ2dlck9wZXJhdGlvbhIKCgZFTkFCTEUQABILCgdE",
            "SVNBQkxFEAESCgoGRVhURU5EEAISCgoGU1RBVFVTEANCKAoYY29tLmtlZXBl",
            "cnNlY3VyaXR5LnByb3RvQgxDbGllbnRMb2dnZXJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ClientLogger.ClientLoggerOperation), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientLogger.ClientLoggerToken), global::ClientLogger.ClientLoggerToken.Parser, new[]{ "ClientLoggerId", "DeviceId", "DateCreatedMillis", "ExpirationDateMillis" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientLogger.ClientLoggerRequest), global::ClientLogger.ClientLoggerRequest.Parser, new[]{ "EncryptedLoggerToken", "Message", "Tag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientLogger.ClientLoggerResponse), global::ClientLogger.ClientLoggerResponse.Parser, new[]{ "Status", "ResponseCode", "AdditionalInfo", "ClientLoggerStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientLogger.ClientLoggerAuthRequest), global::ClientLogger.ClientLoggerAuthRequest.Parser, new[]{ "EncryptedDeviceToken", "Message", "Tag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientLogger.ClientLoggerAdminRequest), global::ClientLogger.ClientLoggerAdminRequest.Parser, new[]{ "Op", "EncryptedLoggerToken", "EncryptedDeviceToken", "Username", "Duration", "Message", "Tag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientLogger.ClientLoggerAdminResponse), global::ClientLogger.ClientLoggerAdminResponse.Parser, new[]{ "Status", "ResponseCode", "AdditionalInfo", "ClientLoggerStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientLogger.ClientLoggerStatus), global::ClientLogger.ClientLoggerStatus.Parser, new[]{ "DeviceId", "Username", "DateStartedUTC", "ExpirationDateUTC", "IsActive", "EncryptedLoggerToken" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ClientLoggerOperation {
    /// <summary>
    /// Enable logging for a device
    /// </summary>
    [pbr::OriginalName("ENABLE")] Enable = 0,
    /// <summary>
    /// Disable logging for a device or user
    /// </summary>
    [pbr::OriginalName("DISABLE")] Disable = 1,
    /// <summary>
    /// Extend logging by the given duration (or the default 30 minutes)
    /// </summary>
    [pbr::OriginalName("EXTEND")] Extend = 2,
    /// <summary>
    /// Query the status of logging for a device or user
    /// </summary>
    [pbr::OriginalName("STATUS")] Status = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  ///*
  /// ClientLoggerToken - used by clients to authorize client-side logging on the server.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ClientLoggerToken : pb::IMessage<ClientLoggerToken>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientLoggerToken> _parser = new pb::MessageParser<ClientLoggerToken>(() => new ClientLoggerToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClientLoggerToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientLogger.ClientloggerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerToken(ClientLoggerToken other) : this() {
      clientLoggerId_ = other.clientLoggerId_;
      deviceId_ = other.deviceId_;
      dateCreatedMillis_ = other.dateCreatedMillis_;
      expirationDateMillis_ = other.expirationDateMillis_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerToken Clone() {
      return new ClientLoggerToken(this);
    }

    /// <summary>Field number for the "clientLoggerId" field.</summary>
    public const int ClientLoggerIdFieldNumber = 1;
    private long clientLoggerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ClientLoggerId {
      get { return clientLoggerId_; }
      set {
        clientLoggerId_ = value;
      }
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 2;
    private long deviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = value;
      }
    }

    /// <summary>Field number for the "dateCreatedMillis" field.</summary>
    public const int DateCreatedMillisFieldNumber = 3;
    private long dateCreatedMillis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DateCreatedMillis {
      get { return dateCreatedMillis_; }
      set {
        dateCreatedMillis_ = value;
      }
    }

    /// <summary>Field number for the "expirationDateMillis" field.</summary>
    public const int ExpirationDateMillisFieldNumber = 4;
    private long expirationDateMillis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExpirationDateMillis {
      get { return expirationDateMillis_; }
      set {
        expirationDateMillis_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClientLoggerToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClientLoggerToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientLoggerId != other.ClientLoggerId) return false;
      if (DeviceId != other.DeviceId) return false;
      if (DateCreatedMillis != other.DateCreatedMillis) return false;
      if (ExpirationDateMillis != other.ExpirationDateMillis) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientLoggerId != 0L) hash ^= ClientLoggerId.GetHashCode();
      if (DeviceId != 0L) hash ^= DeviceId.GetHashCode();
      if (DateCreatedMillis != 0L) hash ^= DateCreatedMillis.GetHashCode();
      if (ExpirationDateMillis != 0L) hash ^= ExpirationDateMillis.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientLoggerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ClientLoggerId);
      }
      if (DeviceId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(DeviceId);
      }
      if (DateCreatedMillis != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(DateCreatedMillis);
      }
      if (ExpirationDateMillis != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ExpirationDateMillis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientLoggerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ClientLoggerId);
      }
      if (DeviceId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(DeviceId);
      }
      if (DateCreatedMillis != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(DateCreatedMillis);
      }
      if (ExpirationDateMillis != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ExpirationDateMillis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ClientLoggerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientLoggerId);
      }
      if (DeviceId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DeviceId);
      }
      if (DateCreatedMillis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DateCreatedMillis);
      }
      if (ExpirationDateMillis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpirationDateMillis);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClientLoggerToken other) {
      if (other == null) {
        return;
      }
      if (other.ClientLoggerId != 0L) {
        ClientLoggerId = other.ClientLoggerId;
      }
      if (other.DeviceId != 0L) {
        DeviceId = other.DeviceId;
      }
      if (other.DateCreatedMillis != 0L) {
        DateCreatedMillis = other.DateCreatedMillis;
      }
      if (other.ExpirationDateMillis != 0L) {
        ExpirationDateMillis = other.ExpirationDateMillis;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientLoggerId = input.ReadInt64();
            break;
          }
          case 16: {
            DeviceId = input.ReadInt64();
            break;
          }
          case 24: {
            DateCreatedMillis = input.ReadInt64();
            break;
          }
          case 32: {
            ExpirationDateMillis = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientLoggerId = input.ReadInt64();
            break;
          }
          case 16: {
            DeviceId = input.ReadInt64();
            break;
          }
          case 24: {
            DateCreatedMillis = input.ReadInt64();
            break;
          }
          case 32: {
            ExpirationDateMillis = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// ClientLoggerRequest
  ///
  /// Clients use this to make an entry in the keeperapp system log.
  /// Both the tags and the message will be logged.
  ///
  /// It may be helpful if your message is in JSON or other structured format so you can process it easier.
  /// The logger only handles textual data.  If your message contains binary data, you are responsible for
  /// converting it to Hex or Base64 for logging.
  ///
  /// The maximum practical size of this message is probably around 64KB even though a Java string can be several megabytes long.
  ///
  /// @return a ClientLoggerResponse
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ClientLoggerRequest : pb::IMessage<ClientLoggerRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientLoggerRequest> _parser = new pb::MessageParser<ClientLoggerRequest>(() => new ClientLoggerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClientLoggerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientLogger.ClientloggerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerRequest(ClientLoggerRequest other) : this() {
      encryptedLoggerToken_ = other.encryptedLoggerToken_;
      message_ = other.message_;
      tag_ = other.tag_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerRequest Clone() {
      return new ClientLoggerRequest(this);
    }

    /// <summary>Field number for the "encryptedLoggerToken" field.</summary>
    public const int EncryptedLoggerTokenFieldNumber = 1;
    private string encryptedLoggerToken_ = "";
    /// <summary>
    /// The encrypted logger token supplied by Keeperapp from a ClientLoggerAuthRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EncryptedLoggerToken {
      get { return encryptedLoggerToken_; }
      set {
        encryptedLoggerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    /// The message to be logged
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_tag_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> tag_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Arbitrary keywords the client wants included in the message.  They should not contain a comma or colon.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Tag {
      get { return tag_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClientLoggerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClientLoggerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EncryptedLoggerToken != other.EncryptedLoggerToken) return false;
      if (Message != other.Message) return false;
      if(!tag_.Equals(other.tag_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EncryptedLoggerToken.Length != 0) hash ^= EncryptedLoggerToken.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      hash ^= tag_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EncryptedLoggerToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EncryptedLoggerToken);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      tag_.WriteTo(output, _repeated_tag_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EncryptedLoggerToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EncryptedLoggerToken);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      tag_.WriteTo(ref output, _repeated_tag_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EncryptedLoggerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncryptedLoggerToken);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      size += tag_.CalculateSize(_repeated_tag_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClientLoggerRequest other) {
      if (other == null) {
        return;
      }
      if (other.EncryptedLoggerToken.Length != 0) {
        EncryptedLoggerToken = other.EncryptedLoggerToken;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      tag_.Add(other.tag_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EncryptedLoggerToken = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            tag_.AddEntriesFrom(input, _repeated_tag_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EncryptedLoggerToken = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            tag_.AddEntriesFrom(ref input, _repeated_tag_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// ClientLoggerResponse
  /// Responds with success or fail, and possibly a message.
  /// If the encryptedLoggerToken is non-empty, use it in future calls for the device
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ClientLoggerResponse : pb::IMessage<ClientLoggerResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientLoggerResponse> _parser = new pb::MessageParser<ClientLoggerResponse>(() => new ClientLoggerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClientLoggerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientLogger.ClientloggerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerResponse(ClientLoggerResponse other) : this() {
      status_ = other.status_;
      responseCode_ = other.responseCode_;
      additionalInfo_ = other.additionalInfo_;
      clientLoggerStatus_ = other.clientLoggerStatus_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerResponse Clone() {
      return new ClientLoggerResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private string status_ = "";
    /// <summary>
    /// 'success' or 'fail'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response_code" field.</summary>
    public const int ResponseCodeFieldNumber = 2;
    private string responseCode_ = "";
    /// <summary>
    /// 'bad_request' or similar code, or empty on success
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResponseCode {
      get { return responseCode_; }
      set {
        responseCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "additional_info" field.</summary>
    public const int AdditionalInfoFieldNumber = 3;
    private string additionalInfo_ = "";
    /// <summary>
    /// Any additional error message, or empty on success
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AdditionalInfo {
      get { return additionalInfo_; }
      set {
        additionalInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clientLoggerStatus" field.</summary>
    public const int ClientLoggerStatusFieldNumber = 4;
    private static readonly pb::FieldCodec<global::ClientLogger.ClientLoggerStatus> _repeated_clientLoggerStatus_codec
        = pb::FieldCodec.ForMessage(34, global::ClientLogger.ClientLoggerStatus.Parser);
    private readonly pbc::RepeatedField<global::ClientLogger.ClientLoggerStatus> clientLoggerStatus_ = new pbc::RepeatedField<global::ClientLogger.ClientLoggerStatus>();
    /// <summary>
    /// Zero or more statuses, containing the encryptedLoggerToken if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ClientLogger.ClientLoggerStatus> ClientLoggerStatus {
      get { return clientLoggerStatus_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClientLoggerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClientLoggerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (ResponseCode != other.ResponseCode) return false;
      if (AdditionalInfo != other.AdditionalInfo) return false;
      if(!clientLoggerStatus_.Equals(other.clientLoggerStatus_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (ResponseCode.Length != 0) hash ^= ResponseCode.GetHashCode();
      if (AdditionalInfo.Length != 0) hash ^= AdditionalInfo.GetHashCode();
      hash ^= clientLoggerStatus_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (ResponseCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResponseCode);
      }
      if (AdditionalInfo.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AdditionalInfo);
      }
      clientLoggerStatus_.WriteTo(output, _repeated_clientLoggerStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (ResponseCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResponseCode);
      }
      if (AdditionalInfo.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AdditionalInfo);
      }
      clientLoggerStatus_.WriteTo(ref output, _repeated_clientLoggerStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (ResponseCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseCode);
      }
      if (AdditionalInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdditionalInfo);
      }
      size += clientLoggerStatus_.CalculateSize(_repeated_clientLoggerStatus_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClientLoggerResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      if (other.ResponseCode.Length != 0) {
        ResponseCode = other.ResponseCode;
      }
      if (other.AdditionalInfo.Length != 0) {
        AdditionalInfo = other.AdditionalInfo;
      }
      clientLoggerStatus_.Add(other.clientLoggerStatus_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
          case 18: {
            ResponseCode = input.ReadString();
            break;
          }
          case 26: {
            AdditionalInfo = input.ReadString();
            break;
          }
          case 34: {
            clientLoggerStatus_.AddEntriesFrom(input, _repeated_clientLoggerStatus_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
          case 18: {
            ResponseCode = input.ReadString();
            break;
          }
          case 26: {
            AdditionalInfo = input.ReadString();
            break;
          }
          case 34: {
            clientLoggerStatus_.AddEntriesFrom(ref input, _repeated_clientLoggerStatus_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// ClientLoggerAuthRequest
  /// Use this from a Keeper client to request that the logging functionality be turned on.
  ///
  /// If it can be turned on, the call returns an "encryptedLoggerToken" that you will need to send in on every call to the logger.
  ///
  /// The client can only deactivate logging on the client-side.  You don't need to tell Keeper that you are done with logging.
  /// The server will write a message to the log when logging is enabled.  You can add content to that log message using this message.
  ///
  /// @return a ClientLoggerResponse
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ClientLoggerAuthRequest : pb::IMessage<ClientLoggerAuthRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientLoggerAuthRequest> _parser = new pb::MessageParser<ClientLoggerAuthRequest>(() => new ClientLoggerAuthRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClientLoggerAuthRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientLogger.ClientloggerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerAuthRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerAuthRequest(ClientLoggerAuthRequest other) : this() {
      encryptedDeviceToken_ = other.encryptedDeviceToken_;
      message_ = other.message_;
      tag_ = other.tag_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerAuthRequest Clone() {
      return new ClientLoggerAuthRequest(this);
    }

    /// <summary>Field number for the "encryptedDeviceToken" field.</summary>
    public const int EncryptedDeviceTokenFieldNumber = 1;
    private pb::ByteString encryptedDeviceToken_ = pb::ByteString.Empty;
    /// <summary>
    /// The device where the log entries will be coming from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString EncryptedDeviceToken {
      get { return encryptedDeviceToken_; }
      set {
        encryptedDeviceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    /// A message to be logged when logging is enabled
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_tag_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> tag_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Arbitrary keywords the client wants included in the message.  They should not contain a comma or colon.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Tag {
      get { return tag_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClientLoggerAuthRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClientLoggerAuthRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EncryptedDeviceToken != other.EncryptedDeviceToken) return false;
      if (Message != other.Message) return false;
      if(!tag_.Equals(other.tag_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EncryptedDeviceToken.Length != 0) hash ^= EncryptedDeviceToken.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      hash ^= tag_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EncryptedDeviceToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(EncryptedDeviceToken);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      tag_.WriteTo(output, _repeated_tag_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EncryptedDeviceToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(EncryptedDeviceToken);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      tag_.WriteTo(ref output, _repeated_tag_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EncryptedDeviceToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncryptedDeviceToken);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      size += tag_.CalculateSize(_repeated_tag_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClientLoggerAuthRequest other) {
      if (other == null) {
        return;
      }
      if (other.EncryptedDeviceToken.Length != 0) {
        EncryptedDeviceToken = other.EncryptedDeviceToken;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      tag_.Add(other.tag_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EncryptedDeviceToken = input.ReadBytes();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            tag_.AddEntriesFrom(input, _repeated_tag_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EncryptedDeviceToken = input.ReadBytes();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            tag_.AddEntriesFrom(ref input, _repeated_tag_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// ClientLoggerAdminRequest
  /// Use this to enable or disable logging for a particular device.
  /// You can also disable logging by device or by username.
  /// You can query the status of logging by device, username, or just get all recent logging statuses (in the last 24 hours)
  /// You can also use it to determine whether a specific device is enabled for logging.
  ///
  /// You should disable logging access when you don't need it any more, but it will also automatically disable after 30 minutes or so.
  ///
  /// @return a ClientLoggerAdminResponse
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ClientLoggerAdminRequest : pb::IMessage<ClientLoggerAdminRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientLoggerAdminRequest> _parser = new pb::MessageParser<ClientLoggerAdminRequest>(() => new ClientLoggerAdminRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClientLoggerAdminRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientLogger.ClientloggerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerAdminRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerAdminRequest(ClientLoggerAdminRequest other) : this() {
      op_ = other.op_;
      encryptedLoggerToken_ = other.encryptedLoggerToken_;
      encryptedDeviceToken_ = other.encryptedDeviceToken_;
      username_ = other.username_;
      duration_ = other.duration_;
      message_ = other.message_;
      tag_ = other.tag_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerAdminRequest Clone() {
      return new ClientLoggerAdminRequest(this);
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 1;
    private global::ClientLogger.ClientLoggerOperation op_ = global::ClientLogger.ClientLoggerOperation.Enable;
    /// <summary>
    /// ENABLE, DISABLE, EXTEND, or STATUS
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ClientLogger.ClientLoggerOperation Op {
      get { return op_; }
      set {
        op_ = value;
      }
    }

    /// <summary>Field number for the "encryptedLoggerToken" field.</summary>
    public const int EncryptedLoggerTokenFieldNumber = 2;
    private string encryptedLoggerToken_ = "";
    /// <summary>
    /// If non-empty, this token identifies the device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EncryptedLoggerToken {
      get { return encryptedLoggerToken_; }
      set {
        encryptedLoggerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encryptedDeviceToken" field.</summary>
    public const int EncryptedDeviceTokenFieldNumber = 3;
    private pb::ByteString encryptedDeviceToken_ = pb::ByteString.Empty;
    /// <summary>
    /// If ELT is empty, this identifies the device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString EncryptedDeviceToken {
      get { return encryptedDeviceToken_; }
      set {
        encryptedDeviceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 4;
    private string username_ = "";
    /// <summary>
    /// If ELT and EDT are empty, this identifies the device (applies to the last 10 devices registered)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 5;
    private int duration_;
    /// <summary>
    /// Duration in seconds that logging is enabled.  Ignored for DISABLE or STATUS.  If value is zero, 30 minutes is used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private string message_ = "";
    /// <summary>
    /// A message to be logged when logging is enabled
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_tag_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> tag_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Arbitrary keywords the client wants included in the message.  They should not contain a comma or colon.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Tag {
      get { return tag_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClientLoggerAdminRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClientLoggerAdminRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Op != other.Op) return false;
      if (EncryptedLoggerToken != other.EncryptedLoggerToken) return false;
      if (EncryptedDeviceToken != other.EncryptedDeviceToken) return false;
      if (Username != other.Username) return false;
      if (Duration != other.Duration) return false;
      if (Message != other.Message) return false;
      if(!tag_.Equals(other.tag_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Op != global::ClientLogger.ClientLoggerOperation.Enable) hash ^= Op.GetHashCode();
      if (EncryptedLoggerToken.Length != 0) hash ^= EncryptedLoggerToken.GetHashCode();
      if (EncryptedDeviceToken.Length != 0) hash ^= EncryptedDeviceToken.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Duration != 0) hash ^= Duration.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      hash ^= tag_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Op != global::ClientLogger.ClientLoggerOperation.Enable) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Op);
      }
      if (EncryptedLoggerToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EncryptedLoggerToken);
      }
      if (EncryptedDeviceToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(EncryptedDeviceToken);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (Duration != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Duration);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      tag_.WriteTo(output, _repeated_tag_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Op != global::ClientLogger.ClientLoggerOperation.Enable) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Op);
      }
      if (EncryptedLoggerToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EncryptedLoggerToken);
      }
      if (EncryptedDeviceToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(EncryptedDeviceToken);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (Duration != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Duration);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      tag_.WriteTo(ref output, _repeated_tag_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Op != global::ClientLogger.ClientLoggerOperation.Enable) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Op);
      }
      if (EncryptedLoggerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncryptedLoggerToken);
      }
      if (EncryptedDeviceToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncryptedDeviceToken);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Duration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duration);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      size += tag_.CalculateSize(_repeated_tag_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClientLoggerAdminRequest other) {
      if (other == null) {
        return;
      }
      if (other.Op != global::ClientLogger.ClientLoggerOperation.Enable) {
        Op = other.Op;
      }
      if (other.EncryptedLoggerToken.Length != 0) {
        EncryptedLoggerToken = other.EncryptedLoggerToken;
      }
      if (other.EncryptedDeviceToken.Length != 0) {
        EncryptedDeviceToken = other.EncryptedDeviceToken;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Duration != 0) {
        Duration = other.Duration;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      tag_.Add(other.tag_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Op = (global::ClientLogger.ClientLoggerOperation) input.ReadEnum();
            break;
          }
          case 18: {
            EncryptedLoggerToken = input.ReadString();
            break;
          }
          case 26: {
            EncryptedDeviceToken = input.ReadBytes();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 40: {
            Duration = input.ReadInt32();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
          case 58: {
            tag_.AddEntriesFrom(input, _repeated_tag_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Op = (global::ClientLogger.ClientLoggerOperation) input.ReadEnum();
            break;
          }
          case 18: {
            EncryptedLoggerToken = input.ReadString();
            break;
          }
          case 26: {
            EncryptedDeviceToken = input.ReadBytes();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 40: {
            Duration = input.ReadInt32();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
          case 58: {
            tag_.AddEntriesFrom(ref input, _repeated_tag_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// ClientLoggerAdminResponse
  /// Responds with success or fail, and possibly a message.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ClientLoggerAdminResponse : pb::IMessage<ClientLoggerAdminResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientLoggerAdminResponse> _parser = new pb::MessageParser<ClientLoggerAdminResponse>(() => new ClientLoggerAdminResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClientLoggerAdminResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientLogger.ClientloggerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerAdminResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerAdminResponse(ClientLoggerAdminResponse other) : this() {
      status_ = other.status_;
      responseCode_ = other.responseCode_;
      additionalInfo_ = other.additionalInfo_;
      clientLoggerStatus_ = other.clientLoggerStatus_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerAdminResponse Clone() {
      return new ClientLoggerAdminResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private string status_ = "";
    /// <summary>
    /// "success" or "fail"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response_code" field.</summary>
    public const int ResponseCodeFieldNumber = 2;
    private string responseCode_ = "";
    /// <summary>
    /// 'bad_request' or similar code, or empty on success
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResponseCode {
      get { return responseCode_; }
      set {
        responseCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "additional_info" field.</summary>
    public const int AdditionalInfoFieldNumber = 3;
    private string additionalInfo_ = "";
    /// <summary>
    /// Any additional error message, or empty on success
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AdditionalInfo {
      get { return additionalInfo_; }
      set {
        additionalInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clientLoggerStatus" field.</summary>
    public const int ClientLoggerStatusFieldNumber = 4;
    private static readonly pb::FieldCodec<global::ClientLogger.ClientLoggerStatus> _repeated_clientLoggerStatus_codec
        = pb::FieldCodec.ForMessage(34, global::ClientLogger.ClientLoggerStatus.Parser);
    private readonly pbc::RepeatedField<global::ClientLogger.ClientLoggerStatus> clientLoggerStatus_ = new pbc::RepeatedField<global::ClientLogger.ClientLoggerStatus>();
    /// <summary>
    /// Zero or more status entries
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ClientLogger.ClientLoggerStatus> ClientLoggerStatus {
      get { return clientLoggerStatus_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClientLoggerAdminResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClientLoggerAdminResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (ResponseCode != other.ResponseCode) return false;
      if (AdditionalInfo != other.AdditionalInfo) return false;
      if(!clientLoggerStatus_.Equals(other.clientLoggerStatus_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (ResponseCode.Length != 0) hash ^= ResponseCode.GetHashCode();
      if (AdditionalInfo.Length != 0) hash ^= AdditionalInfo.GetHashCode();
      hash ^= clientLoggerStatus_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (ResponseCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResponseCode);
      }
      if (AdditionalInfo.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AdditionalInfo);
      }
      clientLoggerStatus_.WriteTo(output, _repeated_clientLoggerStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (ResponseCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResponseCode);
      }
      if (AdditionalInfo.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AdditionalInfo);
      }
      clientLoggerStatus_.WriteTo(ref output, _repeated_clientLoggerStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (ResponseCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseCode);
      }
      if (AdditionalInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdditionalInfo);
      }
      size += clientLoggerStatus_.CalculateSize(_repeated_clientLoggerStatus_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClientLoggerAdminResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      if (other.ResponseCode.Length != 0) {
        ResponseCode = other.ResponseCode;
      }
      if (other.AdditionalInfo.Length != 0) {
        AdditionalInfo = other.AdditionalInfo;
      }
      clientLoggerStatus_.Add(other.clientLoggerStatus_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
          case 18: {
            ResponseCode = input.ReadString();
            break;
          }
          case 26: {
            AdditionalInfo = input.ReadString();
            break;
          }
          case 34: {
            clientLoggerStatus_.AddEntriesFrom(input, _repeated_clientLoggerStatus_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
          case 18: {
            ResponseCode = input.ReadString();
            break;
          }
          case 26: {
            AdditionalInfo = input.ReadString();
            break;
          }
          case 34: {
            clientLoggerStatus_.AddEntriesFrom(ref input, _repeated_clientLoggerStatus_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// ClientLoggerStatus
  /// The status of a logger
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ClientLoggerStatus : pb::IMessage<ClientLoggerStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientLoggerStatus> _parser = new pb::MessageParser<ClientLoggerStatus>(() => new ClientLoggerStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClientLoggerStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientLogger.ClientloggerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerStatus(ClientLoggerStatus other) : this() {
      deviceId_ = other.deviceId_;
      username_ = other.username_;
      dateStartedUTC_ = other.dateStartedUTC_;
      expirationDateUTC_ = other.expirationDateUTC_;
      isActive_ = other.isActive_;
      encryptedLoggerToken_ = other.encryptedLoggerToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientLoggerStatus Clone() {
      return new ClientLoggerStatus(this);
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private long deviceId_;
    /// <summary>
    /// The device mentioned from the corresponding request.  Will never be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    /// <summary>
    /// The username from the corresponding request.  May be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dateStartedUTC" field.</summary>
    public const int DateStartedUTCFieldNumber = 3;
    private string dateStartedUTC_ = "";
    /// <summary>
    /// The UTC date logging started.  Will never be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DateStartedUTC {
      get { return dateStartedUTC_; }
      set {
        dateStartedUTC_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expirationDateUTC" field.</summary>
    public const int ExpirationDateUTCFieldNumber = 4;
    private string expirationDateUTC_ = "";
    /// <summary>
    /// The UTC date logging expires.  Should never be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExpirationDateUTC {
      get { return expirationDateUTC_; }
      set {
        expirationDateUTC_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isActive" field.</summary>
    public const int IsActiveFieldNumber = 5;
    private bool isActive_;
    /// <summary>
    /// Will be true if current time is between dateStarted and expirationDate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    /// <summary>Field number for the "encryptedLoggerToken" field.</summary>
    public const int EncryptedLoggerTokenFieldNumber = 6;
    private pb::ByteString encryptedLoggerToken_ = pb::ByteString.Empty;
    /// <summary>
    /// if available, can be used to create log entries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString EncryptedLoggerToken {
      get { return encryptedLoggerToken_; }
      set {
        encryptedLoggerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClientLoggerStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClientLoggerStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (Username != other.Username) return false;
      if (DateStartedUTC != other.DateStartedUTC) return false;
      if (ExpirationDateUTC != other.ExpirationDateUTC) return false;
      if (IsActive != other.IsActive) return false;
      if (EncryptedLoggerToken != other.EncryptedLoggerToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId != 0L) hash ^= DeviceId.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (DateStartedUTC.Length != 0) hash ^= DateStartedUTC.GetHashCode();
      if (ExpirationDateUTC.Length != 0) hash ^= ExpirationDateUTC.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (EncryptedLoggerToken.Length != 0) hash ^= EncryptedLoggerToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DeviceId);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (DateStartedUTC.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DateStartedUTC);
      }
      if (ExpirationDateUTC.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExpirationDateUTC);
      }
      if (IsActive != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsActive);
      }
      if (EncryptedLoggerToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(EncryptedLoggerToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DeviceId);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (DateStartedUTC.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DateStartedUTC);
      }
      if (ExpirationDateUTC.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExpirationDateUTC);
      }
      if (IsActive != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsActive);
      }
      if (EncryptedLoggerToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(EncryptedLoggerToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DeviceId);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (DateStartedUTC.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DateStartedUTC);
      }
      if (ExpirationDateUTC.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpirationDateUTC);
      }
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (EncryptedLoggerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncryptedLoggerToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClientLoggerStatus other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId != 0L) {
        DeviceId = other.DeviceId;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.DateStartedUTC.Length != 0) {
        DateStartedUTC = other.DateStartedUTC;
      }
      if (other.ExpirationDateUTC.Length != 0) {
        ExpirationDateUTC = other.ExpirationDateUTC;
      }
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      if (other.EncryptedLoggerToken.Length != 0) {
        EncryptedLoggerToken = other.EncryptedLoggerToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeviceId = input.ReadInt64();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            DateStartedUTC = input.ReadString();
            break;
          }
          case 34: {
            ExpirationDateUTC = input.ReadString();
            break;
          }
          case 40: {
            IsActive = input.ReadBool();
            break;
          }
          case 50: {
            EncryptedLoggerToken = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DeviceId = input.ReadInt64();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            DateStartedUTC = input.ReadString();
            break;
          }
          case 34: {
            ExpirationDateUTC = input.ReadString();
            break;
          }
          case 40: {
            IsActive = input.ReadBool();
            break;
          }
          case 50: {
            EncryptedLoggerToken = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
