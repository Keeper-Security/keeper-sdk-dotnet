// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: push.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Push {

  /// <summary>Holder for reflection information generated from push.proto</summary>
  public static partial class PushReflection {

    #region Descriptor
    /// <summary>File descriptor for push.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PushReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpwdXNoLnByb3RvEgRQdXNoIloKF1VzZXJSZWdpc3RyYXRpb25SZXF1ZXN0",
            "EhkKEW1lc3NhZ2VTZXNzaW9uVWlkGAEgASgMEg4KBnVzZXJJZBgCIAEoBRIU",
            "CgxlbnRlcnByaXNlSWQYAyABKAUirwEKFUtBVG9QdXNoU2VydmVyUmVxdWVz",
            "dBImCgttZXNzYWdlVHlwZRgBIAEoDjIRLlB1c2guTWVzc2FnZVR5cGUSDwoH",
            "bWVzc2FnZRgCIAEoCRIZChFtZXNzYWdlU2Vzc2lvblVpZBgDIAEoDBIcChRl",
            "bmNyeXB0ZWREZXZpY2VUb2tlbhgEIAMoDBIOCgZ1c2VySWQYBSADKAUSFAoM",
            "ZW50ZXJwcmlzZUlkGAYgAygFImgKFFdzc0Nvbm5lY3Rpb25SZXF1ZXN0EhkK",
            "EW1lc3NhZ2VTZXNzaW9uVWlkGAEgASgMEhwKFGVuY3J5cHRlZERldmljZVRv",
            "a2VuGAIgASgMEhcKD2RldmljZVRpbWVTdGFtcBgDIAEoAyJMChFXc3NDbGll",
            "bnRSZXNwb25zZRImCgttZXNzYWdlVHlwZRgBIAEoDjIRLlB1c2guTWVzc2Fn",
            "ZVR5cGUSDwoHbWVzc2FnZRgCIAEoCSKLAQojUHVzaFNlcnZlckRldmljZVJl",
            "Z2lzdHJhdGlvblJlcXVlc3QSHAoUZW5jcnlwdGVkRGV2aWNlVG9rZW4YASAB",
            "KAwSEQoJcHVzaFRva2VuGAIgASgJEhoKEm1vYmlsZVB1c2hQbGF0Zm9ybRgD",
            "IAEoCRIXCg90cmFuc21pc3Npb25LZXkYBCABKAwiRQoKU25zTWVzc2FnZRIm",
            "CgttZXNzYWdlVHlwZRgBIAEoDjIRLlB1c2guTWVzc2FnZVR5cGUSDwoHbWVz",
            "c2FnZRgCIAEoDCp/CgtNZXNzYWdlVHlwZRILCgdVTktOT1dOEAASBwoDRE5B",
            "EAESBwoDU1NPEAISCAoEQ0hBVBADEggKBFVTRVIQBBIOCgpFTlRFUlBSSVNF",
            "EAUSCgoGS0VFUEVSEAYSCwoHU0VTU0lPThAHEgoKBkRFVklDRRAIEggKBFRP",
            "VFAQCUIgChhjb20ua2VlcGVyc2VjdXJpdHkucHJvdG9CBFB1c2hiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Push.MessageType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Push.UserRegistrationRequest), global::Push.UserRegistrationRequest.Parser, new[]{ "MessageSessionUid", "UserId", "EnterpriseId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Push.KAToPushServerRequest), global::Push.KAToPushServerRequest.Parser, new[]{ "MessageType", "Message", "MessageSessionUid", "EncryptedDeviceToken", "UserId", "EnterpriseId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Push.WssConnectionRequest), global::Push.WssConnectionRequest.Parser, new[]{ "MessageSessionUid", "EncryptedDeviceToken", "DeviceTimeStamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Push.WssClientResponse), global::Push.WssClientResponse.Parser, new[]{ "MessageType", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Push.PushServerDeviceRegistrationRequest), global::Push.PushServerDeviceRegistrationRequest.Parser, new[]{ "EncryptedDeviceToken", "PushToken", "MobilePushPlatform", "TransmissionKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Push.SnsMessage), global::Push.SnsMessage.Parser, new[]{ "MessageType", "Message" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MessageType {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    /// <summary>
    /// to one specific messageSessionUid
    /// </summary>
    [pbr::OriginalName("DNA")] Dna = 1,
    /// <summary>
    /// not supported
    /// </summary>
    [pbr::OriginalName("SSO")] Sso = 2,
    /// <summary>
    /// to all user's messageSessionUid except one specific messageSessionUid (origin)
    /// </summary>
    [pbr::OriginalName("CHAT")] Chat = 3,
    /// <summary>
    /// to all user's messageSessionUid except one specific messageSessionUid (origin)
    /// </summary>
    [pbr::OriginalName("USER")] User = 4,
    /// <summary>
    /// to all messageSessionUid for enterpriseId not equal current messageSessionUid
    /// </summary>
    [pbr::OriginalName("ENTERPRISE")] Enterprise = 5,
    /// <summary>
    /// KA or Chat connects to or disconnects from PS
    /// </summary>
    [pbr::OriginalName("KEEPER")] Keeper = 6,
    /// <summary>
    /// to one specific messageSessionUid (somehow different from DNA)
    /// </summary>
    [pbr::OriginalName("SESSION")] Session = 7,
    /// <summary>
    /// to all devices
    /// </summary>
    [pbr::OriginalName("DEVICE")] Device = 8,
    /// <summary>
    /// to 2FA
    /// </summary>
    [pbr::OriginalName("TOTP")] Totp = 9,
  }

  #endregion

  #region Messages
  /// <summary>
  /// KA registers login/logout
  /// </summary>
  public sealed partial class UserRegistrationRequest : pb::IMessage<UserRegistrationRequest> {
    private static readonly pb::MessageParser<UserRegistrationRequest> _parser = new pb::MessageParser<UserRegistrationRequest>(() => new UserRegistrationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserRegistrationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Push.PushReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegistrationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegistrationRequest(UserRegistrationRequest other) : this() {
      messageSessionUid_ = other.messageSessionUid_;
      userId_ = other.userId_;
      enterpriseId_ = other.enterpriseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegistrationRequest Clone() {
      return new UserRegistrationRequest(this);
    }

    /// <summary>Field number for the "messageSessionUid" field.</summary>
    public const int MessageSessionUidFieldNumber = 1;
    private pb::ByteString messageSessionUid_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MessageSessionUid {
      get { return messageSessionUid_; }
      set {
        messageSessionUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "enterpriseId" field.</summary>
    public const int EnterpriseIdFieldNumber = 3;
    private int enterpriseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnterpriseId {
      get { return enterpriseId_; }
      set {
        enterpriseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserRegistrationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserRegistrationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageSessionUid != other.MessageSessionUid) return false;
      if (UserId != other.UserId) return false;
      if (EnterpriseId != other.EnterpriseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageSessionUid.Length != 0) hash ^= MessageSessionUid.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (EnterpriseId != 0) hash ^= EnterpriseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageSessionUid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(MessageSessionUid);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (EnterpriseId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EnterpriseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageSessionUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MessageSessionUid);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (EnterpriseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnterpriseId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserRegistrationRequest other) {
      if (other == null) {
        return;
      }
      if (other.MessageSessionUid.Length != 0) {
        MessageSessionUid = other.MessageSessionUid;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.EnterpriseId != 0) {
        EnterpriseId = other.EnterpriseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MessageSessionUid = input.ReadBytes();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 24: {
            EnterpriseId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// KA sends ws message
  /// </summary>
  public sealed partial class KAToPushServerRequest : pb::IMessage<KAToPushServerRequest> {
    private static readonly pb::MessageParser<KAToPushServerRequest> _parser = new pb::MessageParser<KAToPushServerRequest>(() => new KAToPushServerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KAToPushServerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Push.PushReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KAToPushServerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KAToPushServerRequest(KAToPushServerRequest other) : this() {
      messageType_ = other.messageType_;
      message_ = other.message_;
      messageSessionUid_ = other.messageSessionUid_;
      encryptedDeviceToken_ = other.encryptedDeviceToken_.Clone();
      userId_ = other.userId_.Clone();
      enterpriseId_ = other.enterpriseId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KAToPushServerRequest Clone() {
      return new KAToPushServerRequest(this);
    }

    /// <summary>Field number for the "messageType" field.</summary>
    public const int MessageTypeFieldNumber = 1;
    private global::Push.MessageType messageType_ = global::Push.MessageType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Push.MessageType MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "messageSessionUid" field.</summary>
    public const int MessageSessionUidFieldNumber = 3;
    private pb::ByteString messageSessionUid_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MessageSessionUid {
      get { return messageSessionUid_; }
      set {
        messageSessionUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encryptedDeviceToken" field.</summary>
    public const int EncryptedDeviceTokenFieldNumber = 4;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_encryptedDeviceToken_codec
        = pb::FieldCodec.ForBytes(34);
    private readonly pbc::RepeatedField<pb::ByteString> encryptedDeviceToken_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// aka platformDeviceToken
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> EncryptedDeviceToken {
      get { return encryptedDeviceToken_; }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_userId_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> userId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UserId {
      get { return userId_; }
    }

    /// <summary>Field number for the "enterpriseId" field.</summary>
    public const int EnterpriseIdFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_enterpriseId_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> enterpriseId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> EnterpriseId {
      get { return enterpriseId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KAToPushServerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KAToPushServerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageType != other.MessageType) return false;
      if (Message != other.Message) return false;
      if (MessageSessionUid != other.MessageSessionUid) return false;
      if(!encryptedDeviceToken_.Equals(other.encryptedDeviceToken_)) return false;
      if(!userId_.Equals(other.userId_)) return false;
      if(!enterpriseId_.Equals(other.enterpriseId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageType != global::Push.MessageType.Unknown) hash ^= MessageType.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (MessageSessionUid.Length != 0) hash ^= MessageSessionUid.GetHashCode();
      hash ^= encryptedDeviceToken_.GetHashCode();
      hash ^= userId_.GetHashCode();
      hash ^= enterpriseId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageType != global::Push.MessageType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MessageType);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (MessageSessionUid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(MessageSessionUid);
      }
      encryptedDeviceToken_.WriteTo(output, _repeated_encryptedDeviceToken_codec);
      userId_.WriteTo(output, _repeated_userId_codec);
      enterpriseId_.WriteTo(output, _repeated_enterpriseId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageType != global::Push.MessageType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (MessageSessionUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MessageSessionUid);
      }
      size += encryptedDeviceToken_.CalculateSize(_repeated_encryptedDeviceToken_codec);
      size += userId_.CalculateSize(_repeated_userId_codec);
      size += enterpriseId_.CalculateSize(_repeated_enterpriseId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KAToPushServerRequest other) {
      if (other == null) {
        return;
      }
      if (other.MessageType != global::Push.MessageType.Unknown) {
        MessageType = other.MessageType;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.MessageSessionUid.Length != 0) {
        MessageSessionUid = other.MessageSessionUid;
      }
      encryptedDeviceToken_.Add(other.encryptedDeviceToken_);
      userId_.Add(other.userId_);
      enterpriseId_.Add(other.enterpriseId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MessageType = (global::Push.MessageType) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            MessageSessionUid = input.ReadBytes();
            break;
          }
          case 34: {
            encryptedDeviceToken_.AddEntriesFrom(input, _repeated_encryptedDeviceToken_codec);
            break;
          }
          case 42:
          case 40: {
            userId_.AddEntriesFrom(input, _repeated_userId_codec);
            break;
          }
          case 50:
          case 48: {
            enterpriseId_.AddEntriesFrom(input, _repeated_enterpriseId_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Client sends to push
  /// </summary>
  public sealed partial class WssConnectionRequest : pb::IMessage<WssConnectionRequest> {
    private static readonly pb::MessageParser<WssConnectionRequest> _parser = new pb::MessageParser<WssConnectionRequest>(() => new WssConnectionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WssConnectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Push.PushReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WssConnectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WssConnectionRequest(WssConnectionRequest other) : this() {
      messageSessionUid_ = other.messageSessionUid_;
      encryptedDeviceToken_ = other.encryptedDeviceToken_;
      deviceTimeStamp_ = other.deviceTimeStamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WssConnectionRequest Clone() {
      return new WssConnectionRequest(this);
    }

    /// <summary>Field number for the "messageSessionUid" field.</summary>
    public const int MessageSessionUidFieldNumber = 1;
    private pb::ByteString messageSessionUid_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MessageSessionUid {
      get { return messageSessionUid_; }
      set {
        messageSessionUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encryptedDeviceToken" field.</summary>
    public const int EncryptedDeviceTokenFieldNumber = 2;
    private pb::ByteString encryptedDeviceToken_ = pb::ByteString.Empty;
    /// <summary>
    /// aka platformDeviceToken
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EncryptedDeviceToken {
      get { return encryptedDeviceToken_; }
      set {
        encryptedDeviceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deviceTimeStamp" field.</summary>
    public const int DeviceTimeStampFieldNumber = 3;
    private long deviceTimeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DeviceTimeStamp {
      get { return deviceTimeStamp_; }
      set {
        deviceTimeStamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WssConnectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WssConnectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageSessionUid != other.MessageSessionUid) return false;
      if (EncryptedDeviceToken != other.EncryptedDeviceToken) return false;
      if (DeviceTimeStamp != other.DeviceTimeStamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageSessionUid.Length != 0) hash ^= MessageSessionUid.GetHashCode();
      if (EncryptedDeviceToken.Length != 0) hash ^= EncryptedDeviceToken.GetHashCode();
      if (DeviceTimeStamp != 0L) hash ^= DeviceTimeStamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageSessionUid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(MessageSessionUid);
      }
      if (EncryptedDeviceToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(EncryptedDeviceToken);
      }
      if (DeviceTimeStamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(DeviceTimeStamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageSessionUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MessageSessionUid);
      }
      if (EncryptedDeviceToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncryptedDeviceToken);
      }
      if (DeviceTimeStamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DeviceTimeStamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WssConnectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.MessageSessionUid.Length != 0) {
        MessageSessionUid = other.MessageSessionUid;
      }
      if (other.EncryptedDeviceToken.Length != 0) {
        EncryptedDeviceToken = other.EncryptedDeviceToken;
      }
      if (other.DeviceTimeStamp != 0L) {
        DeviceTimeStamp = other.DeviceTimeStamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MessageSessionUid = input.ReadBytes();
            break;
          }
          case 18: {
            EncryptedDeviceToken = input.ReadBytes();
            break;
          }
          case 24: {
            DeviceTimeStamp = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///PS sends to clients
  /// </summary>
  public sealed partial class WssClientResponse : pb::IMessage<WssClientResponse> {
    private static readonly pb::MessageParser<WssClientResponse> _parser = new pb::MessageParser<WssClientResponse>(() => new WssClientResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WssClientResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Push.PushReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WssClientResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WssClientResponse(WssClientResponse other) : this() {
      messageType_ = other.messageType_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WssClientResponse Clone() {
      return new WssClientResponse(this);
    }

    /// <summary>Field number for the "messageType" field.</summary>
    public const int MessageTypeFieldNumber = 1;
    private global::Push.MessageType messageType_ = global::Push.MessageType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Push.MessageType MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WssClientResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WssClientResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageType != other.MessageType) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageType != global::Push.MessageType.Unknown) hash ^= MessageType.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageType != global::Push.MessageType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MessageType);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageType != global::Push.MessageType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WssClientResponse other) {
      if (other == null) {
        return;
      }
      if (other.MessageType != global::Push.MessageType.Unknown) {
        MessageType = other.MessageType;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MessageType = (global::Push.MessageType) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PushServerDeviceRegistrationRequest : pb::IMessage<PushServerDeviceRegistrationRequest> {
    private static readonly pb::MessageParser<PushServerDeviceRegistrationRequest> _parser = new pb::MessageParser<PushServerDeviceRegistrationRequest>(() => new PushServerDeviceRegistrationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PushServerDeviceRegistrationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Push.PushReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushServerDeviceRegistrationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushServerDeviceRegistrationRequest(PushServerDeviceRegistrationRequest other) : this() {
      encryptedDeviceToken_ = other.encryptedDeviceToken_;
      pushToken_ = other.pushToken_;
      mobilePushPlatform_ = other.mobilePushPlatform_;
      transmissionKey_ = other.transmissionKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushServerDeviceRegistrationRequest Clone() {
      return new PushServerDeviceRegistrationRequest(this);
    }

    /// <summary>Field number for the "encryptedDeviceToken" field.</summary>
    public const int EncryptedDeviceTokenFieldNumber = 1;
    private pb::ByteString encryptedDeviceToken_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EncryptedDeviceToken {
      get { return encryptedDeviceToken_; }
      set {
        encryptedDeviceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pushToken" field.</summary>
    public const int PushTokenFieldNumber = 2;
    private string pushToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PushToken {
      get { return pushToken_; }
      set {
        pushToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mobilePushPlatform" field.</summary>
    public const int MobilePushPlatformFieldNumber = 3;
    private string mobilePushPlatform_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MobilePushPlatform {
      get { return mobilePushPlatform_; }
      set {
        mobilePushPlatform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transmissionKey" field.</summary>
    public const int TransmissionKeyFieldNumber = 4;
    private pb::ByteString transmissionKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransmissionKey {
      get { return transmissionKey_; }
      set {
        transmissionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PushServerDeviceRegistrationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PushServerDeviceRegistrationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EncryptedDeviceToken != other.EncryptedDeviceToken) return false;
      if (PushToken != other.PushToken) return false;
      if (MobilePushPlatform != other.MobilePushPlatform) return false;
      if (TransmissionKey != other.TransmissionKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EncryptedDeviceToken.Length != 0) hash ^= EncryptedDeviceToken.GetHashCode();
      if (PushToken.Length != 0) hash ^= PushToken.GetHashCode();
      if (MobilePushPlatform.Length != 0) hash ^= MobilePushPlatform.GetHashCode();
      if (TransmissionKey.Length != 0) hash ^= TransmissionKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EncryptedDeviceToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(EncryptedDeviceToken);
      }
      if (PushToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PushToken);
      }
      if (MobilePushPlatform.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MobilePushPlatform);
      }
      if (TransmissionKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(TransmissionKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EncryptedDeviceToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncryptedDeviceToken);
      }
      if (PushToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PushToken);
      }
      if (MobilePushPlatform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MobilePushPlatform);
      }
      if (TransmissionKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransmissionKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PushServerDeviceRegistrationRequest other) {
      if (other == null) {
        return;
      }
      if (other.EncryptedDeviceToken.Length != 0) {
        EncryptedDeviceToken = other.EncryptedDeviceToken;
      }
      if (other.PushToken.Length != 0) {
        PushToken = other.PushToken;
      }
      if (other.MobilePushPlatform.Length != 0) {
        MobilePushPlatform = other.MobilePushPlatform;
      }
      if (other.TransmissionKey.Length != 0) {
        TransmissionKey = other.TransmissionKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EncryptedDeviceToken = input.ReadBytes();
            break;
          }
          case 18: {
            PushToken = input.ReadString();
            break;
          }
          case 26: {
            MobilePushPlatform = input.ReadString();
            break;
          }
          case 34: {
            TransmissionKey = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SnsMessage : pb::IMessage<SnsMessage> {
    private static readonly pb::MessageParser<SnsMessage> _parser = new pb::MessageParser<SnsMessage>(() => new SnsMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SnsMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Push.PushReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnsMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnsMessage(SnsMessage other) : this() {
      messageType_ = other.messageType_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnsMessage Clone() {
      return new SnsMessage(this);
    }

    /// <summary>Field number for the "messageType" field.</summary>
    public const int MessageTypeFieldNumber = 1;
    private global::Push.MessageType messageType_ = global::Push.MessageType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Push.MessageType MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private pb::ByteString message_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SnsMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SnsMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageType != other.MessageType) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageType != global::Push.MessageType.Unknown) hash ^= MessageType.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageType != global::Push.MessageType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MessageType);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageType != global::Push.MessageType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SnsMessage other) {
      if (other == null) {
        return;
      }
      if (other.MessageType != global::Push.MessageType.Unknown) {
        MessageType = other.MessageType;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MessageType = (global::Push.MessageType) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
